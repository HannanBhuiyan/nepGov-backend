{
    "openapi": "3.0.0",
    "info": {
        "title": "NepGov Api Documentation",
        "contact": {
            "email": "business@opediatech.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/category": {
            "get": {
                "tags": [
                    "category"
                ],
                "summary": "Finds Pets by status",
                "description": "Multiple status values can be provided with comma separated string",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status values that needed to be considered for filter",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "available",
                            "enum": [
                                "available",
                                "pending",
                                "sold"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "profile"
                ],
                "summary": "Finds Pets by status",
                "description": "Multiple status values can be provided with comma separated string",
                "operationId": "register",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status values that needed to be considered for filter",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "available",
                            "enum": [
                                "available",
                                "pending",
                                "sold"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/api/auth/profile": {
            "get": {
                "tags": [
                    "profile"
                ],
                "summary": "Finds Pets by status",
                "description": "Multiple status values can be provided with comma separated string",
                "operationId": "userProfile",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "apiKey",
                            "format": "JWT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    }
}